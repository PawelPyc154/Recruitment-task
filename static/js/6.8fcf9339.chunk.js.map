{"version":3,"sources":["components/pages/Error.tsx","components/pages/companies/utils/columns.ts","components/pages/companies/compoments/THead.tsx","components/pages/companies/compoments/TBody.tsx","components/pages/companies/compoments/FilterByName.tsx","components/pages/companies/Companies.tsx"],"names":["Error","Container","styled","div","props","theme","error","columns","id","label","minWidth","align","THead","TableHead","TableRow","map","column","TableCellStyled","key","style","TableCell","tableRow","textPrimary","border","TBody","nameInput","page","rowsPerPage","useContext","CompaniesContext","companies","history","useHistory","TableBodyStyled","length","Loader","sort","a","b","totalIncome","filter","item","name","includes","slice","row","TableRowStyled","onClick","push","hover","role","tabIndex","TableBody","FilterByName","setNameInput","Input","type","placeholder","value","onChange","event","target","input","borderInputBorderFocus","Companies","useState","setPage","Paper","TableContainerStyled","Table","stickyHeader","aria-label","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","main","textSecondary","TableContainer","backgroundSecondary","scrollbarThumb"],"mappings":"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","file":"static/js/6.8fcf9339.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '../../utils/styled-components';\n\nexport interface ErrorProps {}\n\nconst Error: React.FC<ErrorProps> = () => <Container>Something went wrong!</Container>;\n\nexport default Error;\n\nconst Container = styled.div`\n  position: absolute;\n  top: calc(50% - 25px);\n  left: calc(50% - 83px);\n  color: ${(props) => props.theme.error};\n`;\n","export interface Column {\n  id: 'id' | 'city' | 'totalIncome' | 'name';\n  label: string;\n  minWidth?: number;\n  align?: 'right';\n}\n\nexport const columns: Column[] = [\n  { id: 'id', label: 'id', minWidth: 30 },\n  { id: 'name', label: 'name', minWidth: 100 },\n  { id: 'city', label: 'city', minWidth: 100, align: 'right' },\n  { id: 'totalIncome', label: ' total income', minWidth: 100, align: 'right' },\n];\n","import React from 'react';\nimport { TableHead, TableRow, TableCell } from '@material-ui/core';\nimport { columns } from '../utils/columns';\nimport styled from '../../../../utils/styled-components';\n\nconst THead: React.FC = () => (\n  <TableHead>\n    <TableRow>\n      {columns.map((column) => (\n        <TableCellStyled key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n          {column.label}\n        </TableCellStyled>\n      ))}\n    </TableRow>\n  </TableHead>\n);\n\nexport default THead;\n\nconst TableCellStyled = styled(TableCell)`\n  &.MuiTableCell-root {\n    background-color: ${({ theme }) => theme.tableRow};\n    color: ${({ theme }) => theme.textPrimary};\n    border-color: ${({ theme }) => theme.border};\n  }\n`;\n","import React, { useContext } from 'react';\nimport { TableBody, TableCell, TableRow } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { columns } from '../utils/columns';\nimport { CompaniesContext } from '../../../context/GetCompanies';\nimport Loader from '../../Loader';\nimport Error from '../../Error';\nimport styled from '../../../../utils/styled-components';\n\nexport interface TBodyProps {\n  nameInput: string;\n  page: number;\n  rowsPerPage: number;\n}\n\nconst TBody: React.FC<TBodyProps> = ({ nameInput, page, rowsPerPage }) => {\n  const { error, companies } = useContext(CompaniesContext);\n  const history = useHistory();\n  const handleRedirect = (id: number) => {\n    history.push(`/companies/${id}`);\n  };\n\n  return (\n    <TableBodyStyled>\n      {companies.length === 0 && !error && (\n        <tr>\n          <td>\n            <Loader />\n          </td>\n        </tr>\n      )}\n      {error && (\n        <tr>\n          <td>\n            <Error />\n          </td>\n        </tr>\n      )}\n      {companies\n        .sort((a, b) => b.totalIncome - a.totalIncome)\n        .filter((item) => item.name.includes(nameInput))\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n        .map((row) => (\n          <TableRowStyled onClick={() => handleRedirect(row.id)} hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n            {columns.map((column) => (\n              <TableCellStyled key={column.id} align={column.align}>\n                {row[column.id]}\n              </TableCellStyled>\n            ))}\n          </TableRowStyled>\n        ))}\n    </TableBodyStyled>\n  );\n};\n\nexport default TBody;\n\nconst TableRowStyled = styled(TableRow)`\n  cursor: pointer;\n  &:hover {\n    background-color: ${({ theme }) => theme.tableRow} !important;\n  }\n`;\nconst TableCellStyled = styled(TableCell)`\n  &.MuiTableCell-root {\n    color: ${({ theme }) => theme.textPrimary};\n    border-color: ${({ theme }) => theme.border};\n  }\n`;\nconst TableBodyStyled = styled(TableBody)`\n  position: relative;\n`;\n","import React from 'react';\nimport styled from '../../../../utils/styled-components';\n\nexport interface FilterByNameProps {\n  setNameInput: React.Dispatch<React.SetStateAction<string>>;\n  nameInput: string;\n}\n\nconst FilterByName: React.FC<FilterByNameProps> = ({ setNameInput, nameInput }) => {\n  const handleChangeFilterByName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNameInput(event.target.value);\n  };\n\n  return <Input type=\"text\" placeholder=\"Filter By Name\" value={nameInput} onChange={handleChangeFilterByName} />;\n};\n\nexport default FilterByName;\n\nconst Input = styled.input`\n  width: 100%;\n  height: 40px;\n  border: none;\n  background-color: #202020;\n  color: ${({ theme }) => theme.textPrimary};\n  font-size: 20px;\n  padding: 10px;\n  &:focus {\n    border: 1px solid ${({ theme }) => theme.borderInputBorderFocus};\n    outline: none;\n  }\n`;\n","import React, { useContext, useState } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { CompaniesContext } from '../../context/GetCompanies';\nimport THead from './compoments/THead';\nimport TBody from './compoments/TBody';\nimport FilterByName from './compoments/FilterByName';\nimport styled from '../../../utils/styled-components';\n\nconst Companies: React.FC = () => {\n  const [page, setPage] = useState(0);\n  const rowsPerPage = 30;\n  const { companies } = useContext(CompaniesContext);\n  const [nameInput, setNameInput] = useState('');\n\n  const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage: number) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Container>\n      <Paper>\n        <FilterByName nameInput={nameInput} setNameInput={setNameInput} />\n        <TableContainerStyled>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <THead />\n            <TBody nameInput={nameInput} page={page} rowsPerPage={rowsPerPage} />\n          </Table>\n        </TableContainerStyled>\n        <TablePagination\n          rowsPerPageOptions={[rowsPerPage]}\n          component=\"div\"\n          count={companies.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n        />\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Companies;\n\nconst Container = styled.main`\n  padding: 5px;\n  width: 100%;\n  && .MuiTypography-colorInherit {\n    color: ${({ theme }) => theme.textPrimary};\n  }\n  && .MuiButtonBase-root {\n    color: ${({ theme }) => theme.textPrimary};\n  }\n  && .Mui-disabled {\n    color: ${({ theme }) => theme.textSecondary};\n  }\n`;\nconst TableContainerStyled = styled(TableContainer)`\n  &.MuiTableContainer-root {\n    height: calc(100vh - 120px);\n    overflow-y: scroll;\n    @media screen and (min-width: 500px) {\n      &::-webkit-scrollbar {\n        width: 5px;\n      }\n      &::-webkit-scrollbar-track {\n        background: ${({ theme }) => theme.backgroundSecondary};\n      }\n      &::-webkit-scrollbar-thumb {\n        background: ${({ theme }) => theme.scrollbarThumb};\n      }\n    }\n  }\n`;\nconst Paper = styled.div`\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  border: 1px solid ${({ theme }) => theme.border};\n  width: 100%;\n`;\n"],"sourceRoot":""}