{"version":3,"sources":["components/pages/Error.tsx","components/pages/companyView/components/SliderLabel.tsx","components/pages/companyView/utils/getDate.ts","components/pages/companyView/components/FilterByDate.tsx","components/pages/companyView/components/TotalIncome.tsx","components/pages/companyView/components/AverageIncome.tsx","components/pages/companyView/components/PeriodIncome.tsx","components/pages/companyView/components/Chart.tsx","components/pages/companyView/components/LastMonthIncome.tsx","components/pages/companyView/components/Incomes.tsx","components/pages/companyView/components/CompanyContent.tsx","components/pages/companyView/CompanyView.tsx"],"names":["Error","Container","styled","div","props","theme","error","SliderLabel","children","open","value","date","Date","dayName","getDay","hours","getHours","getMinutes","getDate","getMonth","getFullYear","minutes","day","month","year","Tooltip","enterTouchDelay","leaveTouchDelay","placement","title","FilterByDate","firstDate","lastDate","setPeriodTime","periodTime","SliderStyled","ValueLabelComponent","onChange","event","newValue","valueLabelDisplay","aria-labelledby","min","max","marks","label","Slider","slider","thumb","vertical","track","rail","mark","markActive","markLabel","TotalIncome","periodIncome","sumIncome","toFixed","AverageIncome","P","income","average","length","Number","isNaN","averageIncome","p","PeriodIncome","incomes","firstIncomeDate","lastIncomeDate","filter","item","getTime","Chart","patternColor","arrayColors","arry","i","slice","backgroundColor","Object","keys","borderColor","data","labels","datasets","entries","map","v","borderWidth","height","width","options","display","text","fontSize","legend","responsive","maintainAspectRatio","LastMonthIncome","lastMonthIncome","Incomes","sortByDate","sort","a","b","splitIncomebyMonth","substring","reduce","prev","current","push","lastMonthName","useState","Section","section","CompanyContent","company","Header","id","H1","name","LocationWrapper","TiLocationIcone","Span","city","header","border","h1","span","textSecondary","TiLocation","CompanyView","useContext","CompaniesContext","companies","useParams","find","PaperStyled","Loader","Paper","backgroundSecondary","textPrimary","main"],"mappings":"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","file":"static/js/7.a29e7f52.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '../../utils/styled-components';\n\nexport interface ErrorProps {}\n\nconst Error: React.FC<ErrorProps> = () => <Container>Something went wrong!</Container>;\n\nexport default Error;\n\nconst Container = styled.div`\n  position: absolute;\n  top: calc(50% - 25px);\n  left: calc(50% - 83px);\n  color: ${(props) => props.theme.error};\n`;\n","import Tooltip from '@material-ui/core/Tooltip';\nimport React, { ReactElement } from 'react';\nimport getDate from '../utils/getDate';\n\nexport interface SliderLabelProps {\n  open: boolean;\n  value: number;\n  children: ReactElement;\n}\n\nconst SliderLabel: React.FC<SliderLabelProps> = ({ children, open, value }) => {\n  const [minutes, hours, day, dayName, month, year] = getDate(value);\n  return (\n    <Tooltip\n      open={open}\n      enterTouchDelay={0}\n      leaveTouchDelay={0}\n      placement=\"top\"\n      title={`${hours}:${minutes} ${day}.${month}.${year} ${dayName}`}\n    >\n      {children}\n    </Tooltip>\n  );\n};\n\nexport default SliderLabel;\n","export default (value: number) => {\n  const date = new Date(value);\n  const daysName = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const dayName = daysName[date.getDay()];\n  const hours = date.getHours();\n  const minutes = date.getMinutes() < 10 ? `${date.getMinutes()}0` : date.getMinutes();\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n\n  return [minutes, hours, day, dayName, month, year];\n};\n","import Slider from '@material-ui/core/Slider';\nimport React, { ChangeEvent } from 'react';\nimport SliderLabel from './SliderLabel';\nimport styled from '../../../../utils/styled-components';\n\nexport interface FilterByDateProps {\n  firstDate: number;\n  lastDate: number;\n  setPeriodTime: React.Dispatch<React.SetStateAction<number[]>>;\n  periodTime: number[];\n}\n\nconst FilterByDate: React.FC<FilterByDateProps> = ({ firstDate, lastDate, setPeriodTime, periodTime }) => {\n  const handleChange = (event: ChangeEvent<{}> | {}, newValue: number | number[]) => {\n    setPeriodTime(newValue as number[]);\n  };\n  return (\n    <Container>\n      <SliderStyled\n        ValueLabelComponent={SliderLabel}\n        value={periodTime}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby=\"range-slider-steps\"\n        min={firstDate}\n        max={lastDate}\n        marks={[\n          {\n            value: firstDate,\n            label: 'Date of first income',\n          },\n          {\n            value: lastDate,\n            label: 'Date of last income',\n          },\n        ]}\n      />\n    </Container>\n  );\n};\n\nexport default FilterByDate;\n\nconst Container = styled.div`\n  margin: 5px 15px;\n`;\nconst SliderStyled = styled(Slider)`\n  && .MuiSlider-thumb {\n    height: 20px;\n    width: 20px;\n    background-color: ${({ theme }) => theme.slider.thumb};\n    margin-top: -10px;\n    margin-left: -10px;\n  }\n  && .MuiSlider-vertical {\n    left: calc(-50% + 11px);\n    top: -22px;\n    & * {\n      background: transparent;\n      color: ${({ theme }) => theme.slider.vertical};\n    }\n  }\n  && .MuiSlider-track {\n    height: 2px;\n    background-color: ${({ theme }) => theme.slider.track};\n  }\n  && .MuiSlider-rail {\n    height: 2px;\n    opacity: 0.5;\n    background-color: ${({ theme }) => theme.slider.rail};\n  }\n  && .MuiSlider-mark {\n    background-color: ${({ theme }) => theme.slider.mark};\n    height: 8px;\n    width: 1px;\n    margin-top: -3px;\n    &:nth-of-type(even) {\n      font-size: 20px;\n    }\n  }\n  && .MuiSlider-markActive {\n    opacity: 1;\n    background-color: ${({ theme }) => theme.slider.markActive};\n  }\n  && .MuiSlider-markLabel {\n    color: ${({ theme }) => theme.slider.markLabel};\n    font-size: 10px;\n    @media (min-width: 960px) {\n      font-size: 12px;\n    }\n  }\n  span[data-index='1'] + .MuiSlider-markLabel {\n    transform: translate(-95%, 0);\n  }\n  span[data-index='0'] + .MuiSlider-markLabel {\n    transform: translate(-5%, 0);\n  }\n`;\n","import React from 'react';\nimport { IncomeType } from '../../../context/GetCompanies';\nimport sumIncome from '../../../../utils/sumIncome';\n\nexport interface TotalIncomeProps {\n  periodIncome: IncomeType[];\n}\n\nconst TotalIncome: React.FC<TotalIncomeProps> = ({ periodIncome }) => (\n  <p>\n    Total income:\n    <b>{` ${sumIncome(periodIncome).toFixed(2)}`}</b>\n  </p>\n);\n\nexport default TotalIncome;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { IncomeType } from '../../../context/GetCompanies';\nimport sumIncome from '../../../../utils/sumIncome';\n\nexport interface AverageIncomeProps {\n  periodIncome: IncomeType[];\n}\n\nconst AverageIncome: React.FC<AverageIncomeProps> = ({ periodIncome }) => {\n  const averageIncome = (income: IncomeType[]) => {\n    const average = sumIncome(income) / income.length;\n    return Number.isNaN(average) ? '0.00' : average.toFixed(2);\n  };\n  return (\n    <P>\n      Average income:\n      <b>{` ${averageIncome(periodIncome)}`}</b>\n    </P>\n  );\n};\n\nexport default AverageIncome;\n\nconst P = styled.p`\n  margin: 10px 0;\n`;\n","import React from 'react';\nimport { IncomeType } from '../../../context/GetCompanies';\nimport TotalIncome from './TotalIncome';\nimport AverageIncome from './AverageIncome';\n\nexport interface PeriodIncomeProps {\n  incomes: IncomeType[];\n  periodTime: number[];\n}\n\nconst PeriodIncome: React.FC<PeriodIncomeProps> = ({ incomes, periodTime }) => {\n  const [firstIncomeDate, lastIncomeDate] = periodTime;\n  const periodIncome = incomes.filter(\n    (item) => new Date(item.date).getTime() < lastIncomeDate && new Date(item.date).getTime() > firstIncomeDate,\n  );\n  return (\n    <>\n      <AverageIncome periodIncome={periodIncome} />\n      <TotalIncome periodIncome={periodIncome} />\n    </>\n  );\n};\n\nexport default PeriodIncome;\n","import React from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { IncomeType } from '../../../context/GetCompanies';\nimport sumIncome from '../../../../utils/sumIncome';\n\nexport interface ChartProps {\n  incomes: {\n    [date: string]: IncomeType[];\n  };\n}\n\nconst Chart: React.FC<ChartProps> = ({ incomes }) => {\n  const patternColor = (arrayColors: string[], length: number) => {\n    let arry: string[] = [];\n    for (let i = 0; arry.length < length; i++) {\n      arry = [...arry, ...arrayColors];\n    }\n    arry.slice(length);\n    return arry;\n  };\n  const backgroundColor = patternColor(\n    [\n      'rgba(255, 99, 132, 0.2)',\n      'rgba(54, 162, 235, 0.2)',\n      'rgba(255, 206, 86, 0.2)',\n      'rgba(75, 192, 192, 0.2)',\n      'rgba(153, 102, 255, 0.2)',\n      'rgba(255, 159, 64, 0.2)',\n    ],\n    Object.keys(incomes).length,\n  );\n  const borderColor = patternColor(\n    [\n      'rgba(255, 99, 132, 1)',\n      'rgba(54, 162, 235, 1)',\n      'rgba(255, 206, 86, 1)',\n      'rgba(75, 192, 192, 1)',\n      'rgba(153, 102, 255, 1)',\n      'rgba(255, 159, 64, 1)',\n    ],\n    Object.keys(incomes).length,\n  );\n\n  const data = {\n    labels: Object.keys(incomes),\n    datasets: [\n      {\n        label: 'My First dataset',\n        data: Object.entries(incomes).map(([, v]) => sumIncome(v), 0),\n        backgroundColor,\n        borderColor,\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  const options = {\n    title: {\n      display: true,\n      text: 'Monthly incomes',\n      fontSize: 30,\n    },\n    legend: {\n      display: false,\n    },\n    responsive: true,\n    maintainAspectRatio: true,\n  };\n\n  return (\n    <Container>\n      <HorizontalBar data={data} height={100} width={0} options={options} />\n    </Container>\n  );\n};\n\nexport default Chart;\n\nconst Container = styled.div`\n  height: 550px;\n`;\n","import React from 'react';\n\nimport { IncomeType } from '../../../context/GetCompanies';\nimport sumIncome from '../../../../utils/sumIncome';\n\nexport interface LastMonthIncomeProps {\n  lastMonthIncome: IncomeType[];\n}\n\nconst LastMonthIncome: React.FC<LastMonthIncomeProps> = ({ lastMonthIncome }) => (\n  <p>\n    Last month income:\n    <b>{` ${sumIncome(lastMonthIncome).toFixed(2)}`}</b>\n  </p>\n);\n\nexport default LastMonthIncome;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport FilterByDate from './FilterByDate';\nimport { IncomeType } from '../../../context/GetCompanies';\nimport PeriodIncome from './PeriodIncome';\nimport Chart from './Chart';\nimport LastMonthIncome from './LastMonthIncome';\n\nexport interface IncomesProps {\n  incomes: IncomeType[];\n}\n\nconst Incomes: React.FC<IncomesProps> = ({ incomes }) => {\n  const sortByDate = incomes.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n\n  const splitIncomebyMonth = incomes\n    .map((item) => ({ ...item, date: item.date.substring(0, 7) }))\n    .reduce((prev: { [date: string]: IncomeType[] }, current) => {\n      if (!prev[current.date]) {\n        prev[current.date] = [];\n      }\n      prev[current.date].push(current);\n      return prev;\n    }, {});\n\n  const lastMonthName = sortByDate[0].date.substring(0, 7);\n\n  const firstIncomeDate = new Date(sortByDate[incomes.length - 1].date).getTime();\n  const lastIncomeDate = new Date(sortByDate[0].date).getTime();\n\n  const [periodTime, setPeriodTime] = useState<number[]>([firstIncomeDate, lastIncomeDate]);\n\n  return (\n    <Section>\n      <FilterByDate\n        firstDate={firstIncomeDate}\n        lastDate={lastIncomeDate}\n        periodTime={periodTime}\n        setPeriodTime={setPeriodTime}\n      />\n      <LastMonthIncome lastMonthIncome={splitIncomebyMonth[lastMonthName]} />\n      <PeriodIncome incomes={incomes} periodTime={periodTime} />\n      <Chart incomes={splitIncomebyMonth} />\n    </Section>\n  );\n};\n\nexport default Incomes;\n\nconst Section = styled.section`\n  flex-grow: 1;\n  padding: 0 5px;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { TiLocation } from 'react-icons/ti';\nimport { CompanyWithIncomesType } from '../../../context/GetCompanies';\nimport Incomes from './Incomes';\nimport styled from '../../../../utils/styled-components';\n\nexport interface CompanyContentProps {\n  company: CompanyWithIncomesType;\n}\n\nconst CompanyContent: React.FC<CompanyContentProps> = ({ company }) => (\n  <>\n    <Header>\n      {company.id}\n      <H1>{company.name}</H1>\n      <LocationWrapper>\n        <TiLocationIcone />\n        <Span>{company.city}</Span>\n      </LocationWrapper>\n    </Header>\n    <Incomes incomes={company.incomes} />\n  </>\n);\n\nexport default CompanyContent;\n\nconst Header = styled.header`\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n`;\nconst H1 = styled.h1`\n  text-align: center;\n`;\nconst Span = styled.span`\n  text-align: center;\n`;\nconst LocationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${({ theme }) => theme.textSecondary};\n  margin-bottom: 10px;\n`;\nconst TiLocationIcone = styled(TiLocation)`\n  font-size: 30px;\n`;\n","import React, { useContext } from 'react';\nimport { Paper } from '@material-ui/core';\nimport { useParams } from 'react-router-dom';\nimport { CompaniesContext } from '../../context/GetCompanies';\nimport CompanyContent from './components/CompanyContent';\nimport Loader from '../Loader';\nimport Error from '../Error';\nimport styled from '../../../utils/styled-components';\n\nconst CompanyView: React.FC = () => {\n  const { error, companies } = useContext(CompaniesContext);\n  const { id } = useParams();\n  const company = companies.find((item) => item.id === +id);\n\n  return (\n    <Container>\n      <PaperStyled>\n        {error && <Error />}\n        {!error && !company && <Loader />}\n        {!error && company && <CompanyContent company={company} />}\n      </PaperStyled>\n    </Container>\n  );\n};\n\nexport default CompanyView;\n\nconst PaperStyled = styled(Paper)`\n  width: 100%;\n  max-width: 1000px;\n  margin: 0 auto;\n  min-height: 70vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  &.MuiPaper-root {\n    background-color: ${({ theme }) => theme.backgroundSecondary};\n    border: 1px solid ${({ theme }) => theme.border};\n    color: ${({ theme }) => theme.textPrimary};\n    padding: 10px;\n  }\n`;\nconst Container = styled.main`\n  display: flex;\n  align-items: center;\n  min-height: 100vh;\n`;\n"],"sourceRoot":""}